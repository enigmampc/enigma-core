# I use package renaming to import 2 libraries with the same name but from different sources (1 for SGX and 1 for regular std)
# Then in the code you can rename them back (under a cfg condition) to the same name to use abstractly.

[package]
name = "enigma-types"
version = "0.2.0"
authors = ["Elichai Turkel <elichai@enigma.co>"]
edition = "2018"
categories = ["no-std"]

[dependencies]
rustc-hex = { version = "2.0.1", default-features = false }
arrayvec = { version = "0.4.10", default-features = false }
serde_sgx = { package = "serde", git = "https://github.com/mesalock-linux/serde-sgx.git", rev = "b24d50160af8b554400a6d5128dc1a773e2994b9", features = ["derive"], optional = true }
serde_std = { package = "serde", version = "1.0", default-features = false, features = ["derive"] }

[build-dependencies]
cbindgen = "0.8"

[features]
default = ["std"] # This library should work without std if `--no-default-features` is supplied.
std = ["serde_std/std"]
alloc = ["serde_std/alloc"]
sgx = ["serde_sgx"]
